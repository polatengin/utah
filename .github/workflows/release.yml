name: Release Utah CLI

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup .NET
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          dotnet-version: '9.0.x'

      - name: Get next version
        id: version
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            let nextVersion;
            try {
              const { data: latestRelease } = await github.rest.repos.getLatestRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
              });
              let [major, minor, patch] = latestRelease.tag_name.replace('v', '').split('.').map(Number);
              patch++;
              nextVersion = `${major}.${minor}.${patch}`;
            } catch (error) {
              if (error.status === 404) {
                console.log("No releases found, starting with version 0.1.0");
                nextVersion = '0.1.0';
              } else {
                throw error;
              }
            }
            console.log(`New version: ${nextVersion}`);
            core.setOutput('version', nextVersion);
            core.setOutput('new_version_tag', `v${nextVersion}`);

      - name: Update project version
        run: |
          sed -i 's|<Version>.*</Version>|<Version>${{ steps.version.outputs.version }}</Version>|' src/cli/utah.csproj

      - name: Build
        run: dotnet build src/cli/utah.csproj --configuration Release

      - name: Test
        run: make test

      - name: Publish
        run: |
          dotnet publish src/cli/utah.csproj --configuration Release -p:PublishSingleFile=true --self-contained true -r linux-x64 -o ./publish/linux-x64
          dotnet publish src/cli/utah.csproj --configuration Release -p:PublishSingleFile=true --self-contained true -r osx-x64 -o ./publish/osx-x64

      - name: Create Release
        id: create_release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.new_version_tag }}
          release_name: Release ${{ steps.version.outputs.new_version_tag }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/linux-x64/utah
          asset_name: utah-linux-x64
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/osx-x64/utah
          asset_name: utah-osx-x64
          asset_content_type: application/octet-stream
