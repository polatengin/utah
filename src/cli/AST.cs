// Base node for all AST elements
public abstract record Node;

// Expressions
public abstract record Expression : Node;

public record LiteralExpression(string Value, string Type) : Expression;
public record VariableExpression(string Name) : Expression;
public record BinaryExpression(Expression Left, Expression Right, string Operator) : Expression;
public record UnaryExpression(Expression Operand, string Operator) : Expression;
public record TernaryExpression(Expression Condition, Expression TrueExpression, Expression FalseExpression) : Expression;
public record ParenthesizedExpression(Expression Inner) : Expression;
public record TemplateLiteralExpression(List<object> Parts) : Expression; // Parts can be string or Expression
public record FunctionCall(string Name, List<Expression> Arguments) : Expression;
public record ParallelFunctionCall(string Name, List<Expression> Arguments) : Expression;
public record ConsoleIsSudoExpression() : Expression;
public record ConsolePromptYesNoExpression(Expression PromptText) : Expression;
public record UtilityRandomExpression(Expression? MinValue, Expression? MaxValue) : Expression;
public record ArrayLiteral(List<Expression> Elements, string ElementType) : Expression;
public record ArrayAccess(Expression Array, Expression Index) : Expression;
public record ArrayLength(Expression Array) : Expression;
public record ArrayIsEmpty(Expression Array) : Expression;
public record ArrayContains(Expression Array, Expression Item) : Expression;
public record ArrayReverse(Expression Array) : Expression;
public record ArrayJoinExpression(Expression Array, Expression Separator) : Expression;
public record StringLengthExpression(Expression Target) : Expression;
public record StringSplitExpression(Expression Target, Expression Separator) : Expression;
public record OsIsInstalledExpression(Expression AppName) : Expression;
public record ProcessElapsedTimeExpression() : Expression;
public record ProcessIdExpression() : Expression;
public record ProcessCpuExpression() : Expression;
public record ProcessMemoryExpression() : Expression;
public record ProcessCommandExpression() : Expression;
public record ProcessStatusExpression() : Expression;
public record OsGetLinuxVersionExpression() : Expression;
public record OsGetOSExpression() : Expression;
public record WebGetExpression(Expression Url) : Expression;
public record FsDirnameExpression(Expression Path) : Expression;
public record FsFileNameExpression(Expression Path) : Expression;
public record FsExtensionExpression(Expression Path) : Expression;
public record FsParentDirNameExpression(Expression Path) : Expression;
public record FsReadFileExpression(Expression FilePath) : Expression;
public record FsWriteFileExpressionPlaceholder(Expression FilePath, Expression Content) : Expression;
public record StringToUpperCaseExpression(Expression Target) : Expression;
public record StringToLowerCaseExpression(Expression Target) : Expression;
public record StringStartsWithExpression(Expression Target, Expression Prefix) : Expression;
public record StringEndsWithExpression(Expression Target, Expression Suffix) : Expression;
public record StringSubstringExpression(Expression Target, Expression StartIndex, Expression? Length = null) : Expression;
public record StringIndexOfExpression(Expression Target, Expression SearchValue) : Expression;
public record StringReplaceExpression(Expression Target, Expression SearchValue, Expression ReplaceValue) : Expression;
public record StringIncludesExpression(Expression Target, Expression SearchValue) : Expression;
public record ArrayPushExpression(Expression Array, Expression Item) : Expression;
public record TimerCurrentExpression() : Expression;
public record AssignmentExpression(Expression Left, Expression Right) : Expression;
public record PostIncrementExpression(Expression Operand) : Expression;
public record PostDecrementExpression(Expression Operand) : Expression;
public record PreIncrementExpression(Expression Operand) : Expression;
public record PreDecrementExpression(Expression Operand) : Expression;
public record TimerStartExpression() : Expression;
public record TimerStopExpression() : Expression;
public record ArgsHasExpression(string Flag) : Expression;
public record ArgsGetExpression(string Flag) : Expression;
public record ArgsAllExpression() : Expression;
public record GitUndoLastCommitExpression() : Expression;

// Statements
public abstract record Statement : Node;

public record ExpressionStatement(Expression Expression) : Statement;
public record ProgramNode(List<Statement> Statements) : Node;
public record VariableDeclaration(string Name, string Type, Expression Value, bool IsConst) : Statement;
public record FunctionDeclaration(string Name, List<(string Name, string Type)> Parameters, List<Statement> Body, string? ReturnType) : Statement;
public record ConsoleLog(Expression Message) : Statement;
public record ConsoleClearStatement() : Statement;
public record ScriptEnableDebugStatement() : Statement;
public record ScriptDisableDebugStatement() : Statement;
public record ScriptDisableGlobbingStatement() : Statement;
public record ScriptEnableGlobbingStatement() : Statement;
public record ScriptExitOnErrorStatement() : Statement;
public record ScriptContinueOnErrorStatement() : Statement;
public record ScriptDescriptionStatement(string Description) : Statement;
public record ReturnStatement(Expression? Value) : Statement;
public record IfStatement(Expression Condition, List<Statement> ThenBody, List<Statement> ElseBody) : Statement;
public record ExitStatement(Expression ExitCode) : Statement;
public record RawStatement(string Content) : Statement;
public record ForLoop(VariableDeclaration Initializer, Expression Condition, Expression Update, List<Statement> Body) : Statement;
public record ForInLoop(string VariableName, Expression Iterable, List<Statement> Body) : Statement;
public record WhileStatement(Expression Condition, List<Statement> Body) : Statement;
public record CaseClause(List<Expression> Values, List<Statement> Body, bool HasBreak);
public record DefaultClause(List<Statement> Body, bool HasBreak);
public record SwitchStatement(Expression Expression, List<CaseClause> Cases, DefaultClause? DefaultCase) : Statement;
public record BreakStatement() : Statement;
public record ContinueStatement() : Statement;
public record FsWriteFileStatement(Expression FilePath, Expression Content) : Statement;
public record TimerStartStatement() : Statement;
public record TryCatchStatement(List<Statement> TryBody, List<Statement> CatchBody, string? ErrorMessage) : Statement;
public record ArgsDefineStatement(string LongFlag, string ShortFlag, string Description, string Type, bool IsRequired, Expression? DefaultValue) : Statement;
public record ArgsShowHelpStatement() : Statement;
public record ImportStatement(string FilePath) : Statement;
